/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> ret = new ArrayList<>();

    /**
     * levelOrder
     *
     * @param root root
     * @return List<List<Integer>>
     */
    public List<List<Integer>> levelOrder(TreeNode root) {
        dfs(root, 0);

        return ret;
    }

    private void dfs(TreeNode root, int level) {
        if (root == null) {
            return;
        }
        if (ret.size() == level) {
            ret.add(new ArrayList<>());
        }
        ret.get(level).add(root.val);
        dfs(root.left, level + 1);
        dfs(root.right, level + 1);
    }
}
//runtime:1 ms
//memory:42.9 MB
